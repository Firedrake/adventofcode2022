%!PS

% begin included library code
% see https://github.com/Firedrake/postscript-libraries/
/readlines {
    2 dict begin
    /fh exch (r) file def
    /buf fh bytesavailable string def
    [
        {
            fh buf readline {
                safestring
            } {
                pop
                exit
            } ifelse
        } loop
    ]
    fh closefile
    end
} bind def

/strsplit % (ajbjc) (j) -> [ (a) (b) (c) ]
{
    1 dict begin
    /sep exch def
    [ exch
      {
          dup length 0 eq {
              pop
              exit
          } {
              sep search {
                  exch pop
                  dup length 0 eq {
                      pop
                  } {
                      exch
                  } ifelse
              } {
                  ()
              } ifelse
          } ifelse
      } loop
    ]
    end
} bind def

/safestring {
    dup length string cvs
} bind def


% end included library code

/optree <<
            (input) readlines {
                (:) strsplit aload pop
                ( ) strsplit
            } forall
        >> def

/dump {
    optree {
        exch (....) cvs print (: ) print ==
    } forall
} bind def

/codeadd (+) 0 get def
/codesub (-) 0 get def
/codemul (*) 0 get def
/codediv (/) 0 get def

/resolve {
    2 dict begin
    /twig exch optree exch get def
    twig length 1 eq {
        twig 0 get cvi
    } {
        twig 0 get resolve
        twig 2 get resolve
        1 {
            /codeop twig 1 get 0 get def
            codeop codeadd eq {
                add
                exit
            } if
            codeop codesub eq {
                sub
                exit
            } if
            codeop codemul eq {
                mul
                exit
            } if
            codeop codediv eq {
                idiv
                exit
            } if
        } repeat
    } ifelse
    end
} bind def

(root) resolve ==
