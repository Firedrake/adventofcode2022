%!PS

/cwd 0 array def
/cwds 0 string def
/indir 0 dict def

(input) readlines {
    ( ) strsplit
    /line exch def
    line 0 get ($) deepeq {
        line 1 get (cd) deepeq {
            1 {
                line 2 get (/) deepeq {
                    /cwd 0 array def
                    exit
                } if
                line 2 get (..) deepeq {
                    /cwd cwd apop.right pop def
                    exit
                } if
                /cwd cwd line 2 get safestring apush.right def
            } repeat
            cwd length 0 eq {
                /cwds () def
            } {
                /cwds cwd (/) strjoin def
            } ifelse
        } if
        line 1 get (ls) deepeq {
            indir cwds 0 put
        } if
    } if
    line 0 get 0 get dup 48 ge exch 57 le and {
        line 0 get cvi indir cwds get add indir exch cwds exch put
    } if
} forall

/i 0 def
/lm << indir keys { dup length 100 mul i add /i i 1 add def exch } map aload pop >> def

/lk lm keys quicksort reverse { lm exch get } map def

lk {
    /lower exch dup length string cvs def
    lk {
        /upper exch dup length string cvs def
        lower upper deepeq not {
            lower upper anchorsearch {
                pop pop
                indir lower get indir upper get add indir exch upper exch put
                exit
            } {
                pop
            } ifelse
        } if
    } forall
} forall

indir values { 100000 le } filter { add } reduce ==
