%!PS

/dk 811589153 def
[
    (input) readlines {
        cvi
    } forall
]
dup length /n exch def
/m n 1 sub def
{ dk mul } map
enumerate.array aload pop

10 {
    0 1 m {
        /cycle exch def
        n copy n array astore /s exch def
        0 1 m {
            /i exch def
            s i get 0 get cycle eq {
                n -1 i sub roll
                exit
            } if
        } for
        /x exch def
        m x 1 get neg m mod roll
        x
    } for
} repeat

% find value-zero, move it to the start of the array
{
    dup 1 get 0 eq {
        exit
    } if
    n -1 roll
} loop
n 1 roll
n array astore /result exch def

[
    1000 1000 3000 {
        result exch n mod get 1 get
    } for
] { add } reduce =

%initial {
%    /x exch def
%    n -1 roll
%    pop
%    m x neg roll
%    x
%    n copy n array astore ==
%    exit
%} forall
