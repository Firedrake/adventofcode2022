%!PS

% begin included library code
% see https://github.com/Firedrake/postscript-libraries/
/reduce { % array proc -> value
    2 dict begin
    /p exch def
    /a exch def
    a 0 get
    1 1 a length 1 sub {
        a exch get
        p
    } for
    end
} bind def

/safestring {
    dup length string cvs
} bind def

/readlines {
    2 dict begin
    /fh exch (r) file def
    /buf fh bytesavailable string def
    [
        {
            fh buf readline {
                safestring
            } {
                pop
                exit
            } ifelse
        } loop
    ]
    fh closefile
    end
} bind def

/enumerate.array {
    1 dict begin
    /a exch def
    [
      0 1 a length 1 sub {
          [ exch dup a exch get ]
      } for
    ]
    end
} bind def


% end included library code

[
    (input) readlines {
        cvi
    } forall
]
dup length /n exch def
/m n 1 sub def
enumerate.array aload pop

0 1 m {
    /cycle exch def
    n copy n array astore /s exch def
    0 1 m {
        /i exch def
        s i get 0 get cycle eq {
            n -1 i sub roll
            exit
        } if
    } for
    /x exch def
    m x 1 get neg m mod roll
    x
} for

% find value-zero, move it to the start of the array
{
    dup 1 get 0 eq {
        exit
    } if
    n -1 roll
} loop
n 1 roll
n array astore /result exch def

[
1000 1000 3000 {
    result exch n mod get 1 get
} for
] { add } reduce =

%initial {
%    /x exch def
%    n -1 roll
%    pop
%    m x neg roll
%    x
%    n copy n array astore ==
%    exit
%} forall
